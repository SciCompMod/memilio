name: "Build MSVC"
description: "Build memilio c++ library using MSVC on Windows. Creates artifact build-windows-msvc-$version-$config."
inputs:
  config:
    description: "Configuration to build (Release or Debug, see CMAKE_BUILD_TYPE)"
    required: true
    default: "Release"
  version:
    description: "Version of the compiler that is used (latest or min)."
    required: true
    default: "latest"
  optional-dependencies:
    description: "Build the library with optional dependencies (ON or OFF). If OFF, adds `-nodep` to the artifact name"
    required: false
    default: "ON"
runs:
  using: "composite"
  steps:
    - name: Install ninja
      shell: pwsh
      run: choco install -y ninja
    - name: Install hdf5
      shell: pwsh
      run: |
        if ("${{ inputs.optional-dependencies }}" -eq "ON") {
          Write-Output "Downloading HDF5 1.12.1";
          Invoke-WebRequest -Uri "https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.1/src/hdf5-1.12.1.zip" -OutFile "hdf5-1.12.1.zip";
          Write-Output "Extract HDF5";
          7z x -y "hdf5-1.12.1.zip" "-o."
          Write-Output "Build HDF5";
          cd hdf5-1.12.1
          md build
          cd build
          cmake .. "-DCMAKE_CONFIGURATION_TYPES=${{ inputs.config }}" "-DCMAKE_INSTALL_PREFIX=${{github.workspace}}/hdf5" -DHDF5_BUILD_HL_LIB=OFF -DHDF5_BUILD_CPP_LIB=OFF -DHDF5_BUILD_TOOLS=OFF -DHDF5_BUILD_UTILS=OFF
          cmake --build . --config ${{ inputs.config }}
          Write-Output "Install HDF5";
          cmake --install .
        }
    - name: Build
      shell: cmd /C call {0}
      run: |
        cd cpp
        mkdir build-win
        cd build-win
        if min==${{ inputs.version }} (
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        ) else (
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        )
        cmake --version
        cmake -G "Ninja" -DCMAKE_BUILD_TYPE=${{ inputs.config }} -DMEMILIO_USE_BUNDLED_JSONCPP=${{ inputs.optional-dependencies }} -DHDF5_USE_STATIC_LIBRARIES=ON -DHDF5_DIR="${{github.workspace}}/hdf5/share/cmake/hdf5" ..
        cmake --build . -- -j 4
    - name: Upload built binary files
      uses: actions/upload-artifact@v4
      with:
        #artifacts in one pipeline must have a different name, so options must add a suffix to the artifact name if different values are used in the same pipeline
        name: build-cpp-windows-msvc-${{ inputs.version }}-${{ inputs.config }}${{ inputs.optional-dependencies == 'OFF' && '-nodep' || ''}}
        path: cpp/build-win/bin
        retention-days: 1
