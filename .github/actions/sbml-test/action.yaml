name: "SBML Compile and Run Test"
description: "Compile the SBML integrator, run it on a test example and compile the result."
inputs:
  artifact-pattern:
    description: "Name of the build artifact that contains the unit test binary, and coverage artifacts that will be uploaded."
    required: true
  optional-deps:
    description: "Optional dependencies of unit test binary (ON or OFF, default ON). If OFF, adds `-nodep` to the artifact name."
    required: false
    default: "ON"
runs:
  using: "composite"
  steps:
    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq -y install gcc-13 g++-13 libbz2-dev libbz2-1.0 libsbml5t64 libsbml5-dev ccache
        sudo apt-get -qq update
    - name: ccache
      id: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        # free total space for cache available on github is limited to 10GB, so only save on main branch;
        # other branches will try to use cache from main, but branches that are too old won't benefit;
        save: ${{ github.ref_name == 'main' }} 
        # set enough space per build cache to keep a few previous versions to be used by older branches
        # debug builds require more space
        max-size: ${{ inputs.config == 'Release' && '200M' || '1G' }} 
        # saves cache as `ccache-<key>-<timestamp>` (timestamp added automatically, key must be unique, github caches are never overwritten)
        # key should be a composite of all options that affect the compilation
        key: linux-${{ inputs.compiler }}-${{ inputs.version }}-${{ inputs.config }}-covOFF-depON-ompOFF-sanOFF
        # load most recent cache where a prefix of the key matches a restore-key, e.g. from the most recent nightly run of the same build
        restore-keys: linux-${{ inputs.compiler }}-${{ inputs.version }}-${{ inputs.config }}-covOFF-depON-ompOFF-sanOFF
    - name: Download built test directory
      uses: actions/download-artifact@v4
      with:
        name: build-cpp-linux-${{ inputs.artifact-pattern }}${{ inputs.optional-deps == 'OFF' && '-nodep' || ''}}
        path: cpp
    - name: extract build archive
      shell: bash
      run: |
        cd cpp
        tar -xzf build.tar.gz
    - name: Build SBML converter
      shell: bash
      run: |
        cd cpp/build
        cmake -DCMAKE_BUILD_TYPE=${{ inputs.config }} -DMEMILIO_ENABLE_IPOPT=ON -Dsbml_DIR=/usr/lib/x86_64-linux-gnu/cmake ..
        cmake --build . -j 4
    - name: Run SBML importer
      shell: bash
      run: | 
        cd cpp
        ./build/bin/sbml_to_memilio tests/data/sbml_test.sbml
    - name: Compile result
      shell: bash
      run: |
        cd cpp/build
        cmake -DCMAKE_BUILD_TYPE=${{ inputs.config }} -DMEMILIO_ENABLE_IPOPT=ON -Dsbml_DIR=/usr/lib/x86_64-linux-gnu/cmake ..
        cmake --build . -j 4
